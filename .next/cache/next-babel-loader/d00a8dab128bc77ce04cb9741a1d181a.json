{"ast":null,"code":"var _jsxFileName = \"/Users/zhentianwan/Documents/programming/next.js/my-app/pages/user/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useRouter } from \"next/router\";\nimport { SimpleGrid, Text, Alert } from \"@chakra-ui/core\";\nimport useSWR from \"swr\";\n\nconst fetcher = async url => {\n  const res = await fetch(url);\n\n  if (!res.ok) {\n    throw Error(\"Yo that's NOT OK!!!\");\n  }\n\n  const data = await res.json();\n  return data;\n};\n\nconst UserData = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    data,\n    error\n  } = useSWR(`/api/user/${id}`, fetcher);\n\n  if (error) {\n    return __jsx(Alert, {\n      status: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    }, error);\n  }\n\n  return __jsx(SimpleGrid, {\n    columns: 2,\n    width: \"2xs\",\n    spacingY: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Text, {\n    fontWeight: \"blod\",\n    marginRight: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"UserID\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, `data.id`), __jsx(Text, {\n    fontWeight: \"blod\",\n    marginRight: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Name\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, `data.name`), __jsx(Text, {\n    fontWeight: \"blod\",\n    marginRight: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Email\"), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, `data.email`));\n};\n\nconst user = () => {\n  const router = useRouter();\n\n  const _router$query = router.query,\n        {\n    id\n  } = _router$query,\n        rest = _objectWithoutProperties(_router$query, [\"id\"]);\n};\n\nexport default user;","map":{"version":3,"sources":["/Users/zhentianwan/Documents/programming/next.js/my-app/pages/user/[id].tsx"],"names":["useRouter","SimpleGrid","Text","Alert","useSWR","fetcher","url","res","fetch","ok","Error","data","json","UserData","router","id","query","error","user","rest"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,QAAwC,iBAAxC;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,OAAO,GAAG,MAAOC,GAAP,IAAuB;AACrC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;;AACA,MAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACX,UAAMC,KAAK,CAAC,qBAAD,CAAX;AACD;;AACD,QAAMC,IAIL,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAJV;AAMA,SAAOD,IAAP;AACD,CAZD;;AAcA,MAAME,QAAQ,GAAG,MAAM;AACrB,QAAMC,MAAM,GAAGd,SAAS,EAAxB;AACA,QAAM;AAAEe,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAM;AAAEL,IAAAA,IAAF;AAAQM,IAAAA;AAAR,MAAkBb,MAAM,CAAE,aAAYW,EAAG,EAAjB,EAAoBV,OAApB,CAA9B;;AAEA,MAAIY,KAAJ,EAAW;AACT,WAAO,MAAC,KAAD;AAAO,MAAA,MAAM,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBA,KAAvB,CAAP;AACD;;AAED,SACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE,CAArB;AAAwB,IAAA,KAAK,EAAC,KAA9B;AAAoC,IAAA,QAAQ,EAAE,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,UAAU,EAAC,MAAjB;AAAwB,IAAA,WAAW,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,SAAR,CAJF,EAME,MAAC,IAAD;AAAM,IAAA,UAAU,EAAC,MAAjB;AAAwB,IAAA,WAAW,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EASE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,WAAR,CATF,EAWE,MAAC,IAAD;AAAM,IAAA,UAAU,EAAC,MAAjB;AAAwB,IAAA,WAAW,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF,EAcE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,YAAR,CAdF,CADF;AAkBD,CA3BD;;AA6BA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMJ,MAAM,GAAGd,SAAS,EAAxB;;AACA,wBAAwBc,MAAM,CAACE,KAA/B;AAAA,QAAM;AAAED,IAAAA;AAAF,GAAN;AAAA,QAAeI,IAAf;AACD,CAHD;;AAKA,eAAeD,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport { SimpleGrid, Text, Alert } from \"@chakra-ui/core\";\nimport useSWR from \"swr\";\n\nconst fetcher = async (url: string) => {\n  const res = await fetch(url);\n  if (!res.ok) {\n    throw Error(\"Yo that's NOT OK!!!\");\n  }\n  const data: {\n    id: string;\n    name: string;\n    email: string;\n  } = await res.json();\n\n  return data;\n};\n\nconst UserData = () => {\n  const router = useRouter();\n  const { id } = router.query;\n  const { data, error } = useSWR(`/api/user/${id}`, fetcher);\n\n  if (error) {\n    return <Alert status=\"error\">{error}</Alert>;\n  }\n\n  return (\n    <SimpleGrid columns={2} width=\"2xs\" spacingY={4}>\n      <Text fontWeight=\"blod\" marginRight={4}>\n        UserID\n      </Text>\n      <Text>{`data.id`}</Text>\n\n      <Text fontWeight=\"blod\" marginRight={4}>\n        Name\n      </Text>\n      <Text>{`data.name`}</Text>\n\n      <Text fontWeight=\"blod\" marginRight={4}>\n        Email\n      </Text>\n      <Text>{`data.email`}</Text>\n    </SimpleGrid>\n  );\n};\n\nconst user = () => {\n  const router = useRouter();\n  const { id, ...rest } = router.query;\n};\n\nexport default user;\n"]},"metadata":{},"sourceType":"module"}