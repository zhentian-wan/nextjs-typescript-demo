{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/zhentianwan/Documents/programming/next.js/my-app/pages/user/[id].tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { SimpleGrid, Text } from \"@chakra-ui/core\";\nimport useSWR from \"swr\";\n\nvar fetcher = function fetcher(url) {\n  var res, data;\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 2:\n          res = _context.sent;\n\n          if (res.ok) {\n            _context.next = 5;\n            break;\n          }\n\n          throw Error(\"Yo that's NOT OK!!!\");\n\n        case 5:\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          data = _context.sent;\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar UserData = function UserData() {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSWR = useSWR(\"/api/user/\".concat(id)),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  return __jsx(SimpleGrid, {\n    columns: 2,\n    width: \"2xs\",\n    spacingY: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(Text, {\n    fontWeight: \"blod\",\n    marginRight: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"UserID\"), __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"data.id\"), __jsx(Text, {\n    fontWeight: \"blod\",\n    marginRight: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Name\"), __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"data.name\"), __jsx(Text, {\n    fontWeight: \"blod\",\n    marginRight: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Email\"), __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"data.email\"));\n};\n\nvar user = function user() {\n  var router = useRouter();\n\n  var _router$query = router.query,\n      id = _router$query.id,\n      rest = _objectWithoutProperties(_router$query, [\"id\"]);\n};\n\nexport default user;","map":{"version":3,"sources":["/Users/zhentianwan/Documents/programming/next.js/my-app/pages/user/[id].tsx"],"names":["useRouter","SimpleGrid","Text","useSWR","fetcher","url","fetch","res","ok","Error","json","data","UserData","router","id","query","error","user","rest"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,iBAAjC;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACIC,KAAK,CAACD,GAAD,CADT;;AAAA;AACRE,UAAAA,GADQ;;AAAA,cAETA,GAAG,CAACC,EAFK;AAAA;AAAA;AAAA;;AAAA,gBAGNC,KAAK,CAAC,qBAAD,CAHC;;AAAA;AAAA;AAAA,2CASJF,GAAG,CAACG,IAAJ,EATI;;AAAA;AAKRC,UAAAA,IALQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAYA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAMC,MAAM,GAAGb,SAAS,EAAxB;AADqB,MAEbc,EAFa,GAEND,MAAM,CAACE,KAFD,CAEbD,EAFa;;AAAA,gBAGGX,MAAM,qBAAcW,EAAd,EAHT;AAAA,MAGbH,IAHa,WAGbA,IAHa;AAAA,MAGPK,KAHO,WAGPA,KAHO;;AAKrB,SACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE,CAArB;AAAwB,IAAA,KAAK,EAAC,KAA9B;AAAoC,IAAA,QAAQ,EAAE,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,UAAU,EAAC,MAAjB;AAAwB,IAAA,WAAW,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAME,MAAC,IAAD;AAAM,IAAA,UAAU,EAAC,MAAjB;AAAwB,IAAA,WAAW,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EASE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,EAWE,MAAC,IAAD;AAAM,IAAA,UAAU,EAAC,MAAjB;AAAwB,IAAA,WAAW,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF,EAcE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,CADF;AAkBD,CAvBD;;AAyBA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMJ,MAAM,GAAGb,SAAS,EAAxB;;AADiB,sBAEOa,MAAM,CAACE,KAFd;AAAA,MAETD,EAFS,iBAETA,EAFS;AAAA,MAEFI,IAFE;AAGlB,CAHD;;AAKA,eAAeD,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport { SimpleGrid, Text } from \"@chakra-ui/core\";\nimport useSWR from \"swr\";\n\nconst fetcher = async (url: string) => {\n  const res = await fetch(url);\n  if (!res.ok) {\n    throw Error(\"Yo that's NOT OK!!!\");\n  }\n  const data: {\n    id: string;\n    name: string;\n    email: string;\n  } = await res.json();\n};\n\nconst UserData = () => {\n  const router = useRouter();\n  const { id } = router.query;\n  const { data, error } = useSWR(`/api/user/${id}`);\n\n  return (\n    <SimpleGrid columns={2} width=\"2xs\" spacingY={4}>\n      <Text fontWeight=\"blod\" marginRight={4}>\n        UserID\n      </Text>\n      <Text>{`data.id`}</Text>\n\n      <Text fontWeight=\"blod\" marginRight={4}>\n        Name\n      </Text>\n      <Text>{`data.name`}</Text>\n\n      <Text fontWeight=\"blod\" marginRight={4}>\n        Email\n      </Text>\n      <Text>{`data.email`}</Text>\n    </SimpleGrid>\n  );\n};\n\nconst user = () => {\n  const router = useRouter();\n  const { id, ...rest } = router.query;\n};\n\nexport default user;\n"]},"metadata":{},"sourceType":"module"}